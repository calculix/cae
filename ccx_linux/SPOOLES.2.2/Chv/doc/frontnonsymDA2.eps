%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0.0 0.0 500.0 500.0
%%%EndComments

/nD 10 def
/nL 15 def
/nU 12 def
/margin 50 def
/xscale 500 margin 2 mul sub nD nL add div def
/yscale 500 margin 2 mul sub nD nU add div def
xscale yscale le { % true action -- if else
   /yscale xscale def
} { % false action -- if else
   /xscale yscale def
} ifelse
(xscale) == xscale ==
(yscale) == yscale ==

% 50 50 400 400 rectstroke
gsave
%
%  translate, scale and rotate
%
   50 50 translate
   xscale yscale scale
   0.05 setlinewidth
   0 nD nL add translate
   -90 rotate
%
% draw the outlines of the three DA2 objects
%
   0.0  setgray
   0  0 nD nD rectstroke
   nD 0 nL nD rectstroke
   0 nD nD nU rectstroke
%
%  draw the thick edges for A_{J,J}
%
0 1 nD 1 sub {
   /iy exch def
   newpath
   0.5 iy 0.5 add moveto
   0 1 nD 2 sub {
      /iy exch def
      1.0 0.0 rlineto
   } for
   stroke
} for
%
%  draw the thick edges for A_{bnd{J},J}
%
nD 1 nD nL add 1 sub {
   /ix exch def
   newpath
   ix 0.5 add 0.5 moveto
   0 1 nD 2 sub {
      /iy exch def
      0.0 1.0 rlineto
   } for
   stroke
} for
%
%  draw the thin edges for A_{J,J} and A_{bnd{J},J}
%
currentlinewidth 0.5 mul setlinewidth
newpath
nD 0.5 sub 0.5 moveto
2 1 nD {
   /iy exch def
   0.5 iy 0.5 sub lineto
   nD 1 sub 0 rmoveto
} for
stroke
newpath
nD 0.5 add nD 0.5 sub moveto
nD 1 add 1 nD nL add 1 sub {
   /ix exch def
   ix 0.5 add 0.5 lineto
   ix 0.5 add nD 0.5 sub moveto
} for
stroke
%
%  draw the thick edges for A_{J,bnd{J}}
%
nD 1 nD nU add 1 sub {
   /iy exch def
   newpath
   0.5 iy 0.5 add moveto
   0 1 nD 2 sub {
      /ix exch def
      1.0 0.0 rlineto
   } for
   stroke
} for
%
%  draw the thin edges for U_{J,bnd{J}}
%
currentlinewidth 0.5 mul setlinewidth
newpath
nD 0.5 sub nD 0.5 add moveto
nD 1 add 1 nD nU add 1 sub {
   /iy exch def
   0.5 iy 0.5 add lineto
   nD 0.5 sub iy 0.5 add moveto
} for
stroke
%
% draw the circles that represent entries
%
/r 0.2 def
/x 0.5 def
0 1 nD 1 sub {
   /y 0.5 def
   0 1 nD nU add 1 sub {
      newpath
      1.0 setgray
      pop x r add y moveto x y r 0 360 arc
      fill
      newpath
      0.0 setgray
      x r add y moveto x y r 0 360 arc
      stroke
      /y y 1 add def
   } for
   /x x 1 add def
} for
/x nD 0.5 add def
0 1 nL 1 sub {
   /y 0.5 def
   0 1 nD 1 sub {
      pop 
      newpath
      1.0 setgray
      x r add y moveto x y r 0 360 arc
      fill
      newpath
      0.0 setgray
      x r add y moveto x y r 0 360 arc
      stroke
      /y y 1 add def
   } for
   /x x 1 add def
} for
stroke
grestore
