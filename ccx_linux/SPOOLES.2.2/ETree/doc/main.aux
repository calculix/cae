\relax 
\@writefile{toc}{\contentsline {chapter}{\numberline {1}{\tt  ETree}: Elimination and Front Trees}{1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapter:ETree}{{1}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Data Structure}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Prototypes and descriptions of {\tt  ETree} methods}{2}}
\newlabel{section:ETree:proto}{{1.2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}Basic methods}{2}}
\newlabel{subsection:ETree:proto:basics}{{1.2.1}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.2}Instance methods}{2}}
\newlabel{subsection:ETree:proto:instance}{{1.2.2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.3}Initializer methods}{4}}
\newlabel{subsection:ETree:proto:initializers}{{1.2.3}{4}}
\citation{liu90-etree}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.4}Utility methods}{6}}
\newlabel{subsection:ETree:proto:utilities}{{1.2.4}{6}}
\citation{liu91-generalizedEnvelope}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.5}Metrics methods}{8}}
\newlabel{subsection:ETree:proto:metrics}{{1.2.5}{8}}
\citation{ash89-relaxed}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.6}Compression methods}{9}}
\newlabel{subsection:ETree:proto:compression}{{1.2.6}{9}}
\citation{liu85-mfstorage}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.7}Justification methods}{10}}
\newlabel{subsection:ETree:proto:justify}{{1.2.7}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.8}Permutation methods}{10}}
\newlabel{subsection:ETree:proto:permutation}{{1.2.8}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.9}Multisector methods}{11}}
\newlabel{subsection:ETree:proto:multisector}{{1.2.9}{11}}
\citation{duf83-multifrontal}
\citation{ash89-relaxed}
\citation{ash89-relaxed}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.10}Transformation methods}{13}}
\newlabel{subsection:ETree:proto:transformation}{{1.2.10}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.11}Parallel factorization map methods}{15}}
\newlabel{subsection:ETree:proto:map}{{1.2.11}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.12}Storage profile methods}{16}}
\newlabel{subsection:ETree:proto:storage}{{1.2.12}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.13}IO methods}{17}}
\newlabel{subsection:ETree:proto:IO}{{1.2.13}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}Driver programs for the {\tt  ETree} object}{18}}
\newlabel{section:ETree:drivers}{{1.3}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces {\sc  GRD7x7}: Working storage for the forward sparse factorization of the nested dissection ordering. On the left is the storage required to factor ${\mathaccent "0362\relax J}$ and its update matrix. On the right is the storage required to factor $J$ and all of its ancestors. Both plots have the same scale.}}{23}}
\newlabel{fig-GRD7x7-FStree}{{1.1}{23}}
\citation{ash89-relaxed}
\citation{duf83-multifrontal}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces {\sc  GRD7x7x7}: Four tree plots for a $7 \times 7 \times 7$ grid matrix ordered using nested dissection. The top left tree measure number of original matrix entries in a front. The top right tree measure number of factor matrix entries in a front. The bottom left tree measure number of factor operations in a front for a forward looking factorization, e.g., forward sparse. The bottom right tree measure number of factor operations in a front for a backward looking factorization, e.g., general sparse.}}{28}}
\newlabel{fig-GRD7x7x7-metrics}{{1.2}{28}}
